package capa_vista;


import base_datos.UsuarioDAO;
import capa_controladora.GestionarController;
import entidades.Password;
import entidades.TipoUsuario;
import entidades.Usuario;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author erick
 */
public class jFrameGestionarUsuarios extends javax.swing.JFrame {
    private GestionarController controller; // ✅ Declarar controlador
    /**
     * Creates new form jFrameGestionarUsuarios
     */
    public jFrameGestionarUsuarios() {
        initComponents();
        controller = new GestionarController();
        actualizarTabla();
    }
    
   
    private void actualizarTabla() {
    List<Usuario> usuarios = controller.obtenerUsuarios();  // Obtiene la lista actualizada del Controller
    DefaultTableModel model = (DefaultTableModel)jTablaUsuarios.getModel();  // Asume que tu tabla se llama jTableUsuarios
    model.setRowCount(0);  // Limpia las filas existentes para evitar duplicados
    
    for (Usuario u : usuarios) {
        Object[] row = {
            u.getNombres(),
            u.getApellidos(),
            u.getCorreoElectronico(),
            u.getTipoUsuario().getCargo(),  // O el campo que muestres
            u.getPassword().getIdentificador(),// Para el identificador
            u.getPassword().getClaveAcceso()
                
        };
        model.addRow(row);  // Agrega cada fila
    }
    }
   
     private void limpiarCampos() {
        txtNombres.setText("");
        txtApellidos.setText("");
        txtCorreo.setText("");
        txtId.setText("");
        txtContrasena.setText("");
        cbCargos.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        cbCargos = new javax.swing.JComboBox<>();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaUsuarios = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestionar Usuarios");

        jLabel1.setText("Nombres :");

        jLabel2.setText("Apellidos :");

        jLabel3.setText("Correo Electrónico :");

        jLabel4.setText("Cargo :");

        jLabel5.setText("Identificador :");

        jLabel6.setText("Contraseña :");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        cbCargos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Técnico", "Programador", "Cliente" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jTablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Apellidos", "Correo Electrónico", "Cargo", "Identificador", "Contraseña"
            }
        ));
        jTablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaUsuarios);

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAtras)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCorreo))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                            .addComponent(txtApellidos)
                                            .addComponent(txtId)
                                            .addComponent(txtContrasena)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                        .addComponent(cbCargos, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRegistrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar)))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnAtras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrar)
                            .addComponent(btnActualizar)
                            .addComponent(btnEliminar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
         try {
        String nombres = txtNombres.getText();
        String apellidos = txtApellidos.getText();
        String correo = txtCorreo.getText();
        String claveAcceso = txtContrasena.getText();
        String identificador = txtId.getText();
        String cargo = (String) cbCargos.getSelectedItem();  // Actualizado para JComboBox
        
        if (cargo == null) {  // Verifica si se seleccionó algo
            JOptionPane.showMessageDialog(null, "Selecciona un cargo");
            return;
        }
        
        Password password = new Password(claveAcceso, identificador);
        TipoUsuario tipoUsuario = new TipoUsuario(cargo);  // Pasa el cargo al constructor
        Usuario nuevoUsuario = new Usuario(nombres, apellidos, correo, tipoUsuario, password);
        
        controller.agregarUsuario(nuevoUsuario);
        JOptionPane.showMessageDialog(null, "Usuario registrado exitosamente");
        actualizarTabla();
        limpiarCampos();
        
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
          int selectedRow = jTablaUsuarios.getSelectedRow();

    if (selectedRow != -1) {
        try {
            // 1️⃣ Obtener datos desde los campos del formulario
            String nombres = txtNombres.getText().trim();
            String apellidos = txtApellidos.getText().trim();
            String correo = txtCorreo.getText().trim();
            String claveAcceso = txtContrasena.getText().trim();
            String identificador = txtId.getText().trim(); // ✅ Usamos el campo, no la tabla
            String cargo = cbCargos.getSelectedItem().toString();

            // 2️⃣ Validar campos
            if (nombres.isEmpty() || apellidos.isEmpty() || correo.isEmpty() || claveAcceso.isEmpty() || identificador.isEmpty()) {
                JOptionPane.showMessageDialog(null, "⚠️ Todos los campos deben estar completos.");
                return;
            }

            // 3️⃣ Construir el objeto Usuario
            Password password = new Password(claveAcceso, identificador);
            TipoUsuario tipoUsuario = new TipoUsuario(cargo);
            Usuario usuarioActualizado = new Usuario(nombres, apellidos, correo, tipoUsuario, password);

            // 4️⃣ Actualizar vía controlador
            controller.actualizarUsuario(usuarioActualizado);

            // 5️⃣ Confirmación y limpieza
            JOptionPane.showMessageDialog(null, "✅ Usuario actualizado exitosamente");
            actualizarTabla();
            limpiarCampos();
            jTablaUsuarios.clearSelection(); // 🔄 Deselecciona la fila
            txtId.setEditable(true);         // 🔓 Reactiva el campo si lo habías bloqueado

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "❌ Error al actualizar: " + ex.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "⚠️ Selecciona un usuario desde la tabla para actualizar.");
    }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
     int selectedRow = jTablaUsuarios.getSelectedRow();  // Obtiene la fila seleccionada
            if (selectedRow != -1) {  // Verifica si hay una fila seleccionada
             int confirmacion = JOptionPane.showConfirmDialog(null, 
            "¿Estás seguro de que quieres eliminar este usuario?", 
            "Confirmar eliminación", 
            JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {  // Solo si el usuario dice Sí
            try {
                String identificador = (String) jTablaUsuarios.getValueAt(selectedRow, 4);  // Asume columna 4 es el identificador
                controller.eliminarUsuario(identificador);  // Llama al Controller
                JOptionPane.showMessageDialog(null, "Usuario eliminado exitosamente");
                actualizarTabla();  // Actualiza la tabla
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error al eliminar: " + ex.getMessage());
            }
        }  // Si dice No, no se hace nada
        
    } else {
        JOptionPane.showMessageDialog(null, "Selecciona un usuario para eliminar");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
         DefaultTableModel modelo = (DefaultTableModel) jTablaUsuarios.getModel();
                  boolean encontrado = false;
                  String texto = txtBuscar.getText();

    for (int i = 0; i < modelo.getRowCount(); i++) {
        for (int j = 0; j < modelo.getColumnCount(); j++) {
            Object valor = modelo.getValueAt(i, j);
            if (valor != null && valor.toString().toLowerCase().contains(texto.toLowerCase())) {
                jTablaUsuarios.setRowSelectionInterval(i, i);
                jTablaUsuarios.scrollRectToVisible(jTablaUsuarios.getCellRect(i, 0, true));
                encontrado = true;
                break;
            }
        }
        if (encontrado) break;
    }

    if (!encontrado) {
        JOptionPane.showMessageDialog(null, "No se encontró ningún resultado.");
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        jFrameMenuAdmin atras = new jFrameMenuAdmin();
        atras.setVisible(true);
        atras.setLocationRelativeTo(null);
        this.dispose();//Cierra la ventana actual
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void jTablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaUsuariosMouseClicked
         int selectedRow = jTablaUsuarios.getSelectedRow();
    if (selectedRow != -1) {
        // Obtener datos de la fila seleccionada
        String nombres = (String) jTablaUsuarios.getValueAt(selectedRow, 0);
        String apellidos = (String) jTablaUsuarios.getValueAt(selectedRow, 1);
        String correo = (String) jTablaUsuarios.getValueAt(selectedRow, 2);
        String cargo = (String) jTablaUsuarios.getValueAt(selectedRow, 3);
        String identificador = (String) jTablaUsuarios.getValueAt(selectedRow, 4);
        String clave = (String) jTablaUsuarios.getValueAt(selectedRow, 5);

        // Llenar los campos del formulario
        txtNombres.setText(nombres);
        txtApellidos.setText(apellidos);
        txtCorreo.setText(correo);
        cbCargos.setSelectedItem(cargo);
        txtId.setText(identificador);
        txtContrasena.setText(clave); 
        }
    }//GEN-LAST:event_jTablaUsuariosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFrameGestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFrameGestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFrameGestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFrameGestionarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFrameGestionarUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cbCargos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaUsuarios;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
